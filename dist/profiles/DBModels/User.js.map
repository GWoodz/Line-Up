{"version":3,"sources":["../../../profiles/DBModels/User.js"],"names":["Sequelize","require","bcrypt","module","exports","sequelize","id","type","INTEGER","primaryKey","autoIncrement","firstName","STRING","allowNull","lastName","status","defaultValue","birthdate","email","phoneNumber","passwordHash","gender","TINYINT","paymentInfo","models","Model"],"mappings":"AAAA;;;;;;;;;;;;AACA,IAAMA,YAAYC,QAAQ,WAAR,CAAlB;AACA,IAAMC,SAASD,QAAQ,QAAR,CAAf;;AAEAE,OAAOC,OAAP;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAEoBC,SAFpB,EAE+B;AACnB,gGAAkB;AACVC,oBAAI;AACAC,0BAAMP,UAAUQ,OADhB;AAEAC,gCAAY,IAFZ;AAGAC,mCAAe;AAHf,iBADM;AAMVC,2BAAW;AACPJ,0BAAMP,UAAUY,MADT;AAEPC,+BAAW;AAFJ,iBAND;AAUVC,0BAAU;AACNP,0BAAMP,UAAUY,MADV;AAENC,+BAAW;AAFL,iBAVA;AAcVE,wBAAQ;AACJR,0BAAMP,UAAUY,MADZ;AAEJI,kCAAc;AAFV,iBAdE;AAkBVC,2BAAW;AACPV,0BAAMP,UAAUY,MADT;AAEPC,+BAAW;AAFJ,iBAlBD;AAsBVK,uBAAO;AACHX,0BAAMP,UAAUY,MADb;AAEHC,+BAAW;AAFR,iBAtBG;AA0BVM,6BAAa;AACTZ,0BAAMP,UAAUY;AADP,iBA1BH;AA6BVQ,8BAAc;AACVb,0BAAMP,UAAUY,MADN;AAEVC,+BAAW;AAFD,iBA7BJ;AAiCVQ,wBAAQ;AACJd,0BAAMP,UAAUsB;AADZ,iBAjCE;AAoCVC,6BAAa;AACThB,0BAAMP,UAAUY,MADP;AAETC,+BAAW,IAFF;AAGTG,kCAAc;AAHL;;AApCH,aAAlB,EA2CI,EAACX,oBAAD,EA3CJ;AA6CE;AAhDd;AAAA;;;AAkDQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAzDR,kCA4DyBmB,MA5DzB,EA4DiC,CACxB;AA7DT;;AAAA;AAAA,EACuBxB,UAAUyB,KADjC","file":"User.js","sourcesContent":["'use strict';\nconst Sequelize = require('sequelize');\nconst bcrypt = require('bcrypt');\n\nmodule.exports =\n    class User extends Sequelize.Model {\n        static init(sequelize) {\n            return super.init({\n                    id: {\n                        type: Sequelize.INTEGER,\n                        primaryKey: true,\n                        autoIncrement: true\n                    },\n                    firstName: {\n                        type: Sequelize.STRING,\n                        allowNull: false\n                    },\n                    lastName: {\n                        type: Sequelize.STRING,\n                        allowNull: false\n                    },\n                    status: {\n                        type: Sequelize.STRING,\n                        defaultValue: 'active'\n                    },\n                    birthdate: {\n                        type: Sequelize.STRING,\n                        allowNull: true\n                    },\n                    email: {\n                        type: Sequelize.STRING,\n                        allowNull: false\n                    },\n                    phoneNumber: {\n                        type: Sequelize.STRING\n                    },\n                    passwordHash: {\n                        type: Sequelize.STRING,\n                        allowNull: false\n                    },\n                    gender: {\n                        type: Sequelize.TINYINT\n                    },\n                    paymentInfo: {\n                        type: Sequelize.STRING,\n                        allowNull: true,\n                        defaultValue: null\n                    }\n\n                },\n                {sequelize},\n\n            )};\n\n        // static validPassword(testPass) {\n        //     bcrypt.compare(testPass, this.passwordHash, (err, res) => {\n        //         if (err) {\n        //             return err;\n        //         }\n        //         return res;\n        //     });\n        // }\n\n\n        static associate(models) {\n        }\n    };"]}