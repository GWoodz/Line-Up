{"version":3,"sources":["../../profiles/barber.js"],"names":["Barber","user","profileObj","profile","type","profileType","username","premium","paymentInfo","Object","assign"],"mappings":"AAAA;;;;;;AACA;;;;;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,UAAtB,EAAkC;;AAE9B;AACA,QAAIC,UAAU;AACVC,cAAM,uBAASC,WAAT,CAAqB,CAArB,CADI;AAEVC,kBAAUJ,WAAWI,QAFX;AAGVC,iBAAS,KAHC;AAIVC,qBAAaP,KAAKO;AAJR,KAAd;AAMA;AACA,WAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBP,OAAlB,CAAP;AAED;;kBAEYH,M","file":"barber.js","sourcesContent":["\"use strict\";\nimport profiles from \"./profileTypes\";\n//declaration entity file for barber model\n\n// const canUpdateMetrics = () => ({\n//\n//     updateWaitTime(reviews) {\n//\n//         let avgWaitTime = 0;\n//         let waitTimeEntered = 0;\n//\n//         Object.keys(reviews).forEach(function (review) {\n//             if (review.waitTime === null) {\n//                 return;\n//             }\n//             avgWaitTime += review.waitTime;\n//             waitTimeEntered++;\n//         });\n//         avgWaitTime /= waitTimeEntered;\n//\n//         Object.defineProperty(this, avgWait, {\n//             value: avgWaitTime,\n//             enumerable: true,\n//             writable: true\n//         });\n//\n//     },\n//\n//\n//     updateAverageDuration(haircuts) {\n//         let avgDuration = 0;\n//\n//         /*add duration of each haircut together*/\n//         Object.keys(haircuts).forEach(function (haircut) {\n//             avgDuration += haircut.duration;\n//         });\n//         //get average of all haircut durations and update barber profile\n//         avgDuration /= haircuts.length;\n//         this.avgCutDuration = avgDuration;\n//     },\n// });\n//\n//\n// const canConfigureMembership = () => ({\n//\n// //barber can check if they are up to date on there payments\n//     isPremium() {\n//         if (this.paymentInfo.status === 'current') {\n//             Object.defineProperty(barber, 'premium', {\n//                 value: true,\n//                 writable: true,\n//                 enumerable: true\n//             });\n//         }\n//     },\n//\n//\n// //barber can check what subscription they currently have\n//     checkTerm() {\n//\n//         if (this.paymentInfo.pastAmount === monthlyAmount) {\n//             Object.defineProperty(this.paymentInfo, 'arrangement', {\n//                 value: 'monthly',\n//                 writable: true,\n//                 enumerable: true\n//             });\n//         } else if (this.paymentInfo.pastAmount === yearlyAmount) {\n//             Object.defineProperty(this.paymentInfo, 'arrangement', {\n//                 value: 'yearly',\n//                 writable: true,\n//                 enumerable: true\n//             });\n//         }\n//     }\n// });\n\n//Public Functions\n\n//creates barber profile from user\nfunction Barber(user, profileObj) {\n\n    //assign user provided values to new barber profile\n    let profile = {\n        type: profiles.profileType[1],\n        username: profileObj.username,\n        premium: false,\n        paymentInfo: user.paymentInfo\n    };\n    //creates a new barber profile object\n    return Object.assign({}, profile);\n\n  }\n\nexport default Barber;\n"]}