{"version":3,"sources":["../../profiles/barber.js"],"names":["monthlyAmount","annualAmount","canChooseBarbershop","canUpdateMetrics","updateWaitTime","reviews","avgWaitTime","waitTimeEntered","Object","keys","forEach","review","waitTime","defineProperty","avgWait","value","enumerable","writable","updateAverageDuration","haircuts","avgDuration","haircut","duration","length","avgCutDuration","canConfigureMembership","isPremium","paymentInfo","status","barber","checkTerm","pastAmount","yearlyAmount","Barber","user","profileObj","hasBarberProfile","assign","User","canUpdate","profile","type","username","premium"],"mappings":"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","file":"barber.js","sourcesContent":["\"use strict\";\nimport profiles from \"./profileTypes\";\n\nimport User from \"./user\";\n\nimport creditOptions from \"./barberMemberInfo\";\n//declaration entity file for barber model\n\nconst monthlyAmount = 0;\nconst annualAmount = 0;\n\nconst canChooseBarbershop = () => ({\n\n});\n\nconst canUpdateMetrics = () => ({\n\n    updateWaitTime(reviews) {\n\n        let avgWaitTime = 0;\n        let waitTimeEntered = 0;\n\n        Object.keys(reviews).forEach(function (review) {\n            if (review.waitTime === null) {\n                return;\n            }\n            avgWaitTime += review.waitTime;\n            waitTimeEntered++;\n        });\n        avgWaitTime /= waitTimeEntered;\n\n        Object.defineProperty(this, avgWait, {\n            value: avgWaitTime,\n            enumerable: true,\n            writable: true\n        });\n\n    },\n\n\n    updateAverageDuration(haircuts) {\n        let avgDuration = 0;\n\n        /*add duration of each haircut together*/\n        Object.keys(haircuts).forEach(function (haircut) {\n            avgDuration += haircut.duration;\n        });\n        //get average of all haircut durations and update barber profile\n        avgDuration /= haircuts.length;\n        this.avgCutDuration = avgDuration;\n    },\n});\n\n\nconst canConfigureMembership = () => ({\n\n//barber can check if they are up to date on there payments\n    isPremium() {\n        if (this.paymentInfo.status === 'current') {\n            Object.defineProperty(barber, 'premium', {\n                value: true,\n                writable: true,\n                enumerable: true\n            });\n        }\n    },\n\n\n//barber can check what subscription they currently have\n    checkTerm() {\n\n        if (this.paymentInfo.pastAmount === monthlyAmount) {\n            Object.defineProperty(this.paymentInfo, 'arrangement', {\n                value: 'monthly',\n                writable: true,\n                enumerable: true\n            });\n        } else if (this.paymentInfo.pastAmount === yearlyAmount) {\n            Object.defineProperty(this.paymentInfo, 'arrangement', {\n                value: 'yearly',\n                writable: true,\n                enumerable: true\n            });\n        }\n    }\n});\n\n//Public Functions\n\n//creates barber profile from user\nfunction Barber (user,profileObj) {\n\n    //check to see if user has a barber profile\n    if (user.hasBarberProfile === true) return Object.assign(profileObj, canConfigureMembership(profileObj), user.User.canUpdate(), canUpdateMetrics());\n    Object.defineProperty(user, \"hasBarberProfile\", {\n        value: true,\n        writable: true,\n        enumerable: true\n    });\n\n    //assign user provided values to new barber profile\n    let profile = {\n        type: profiles[1],\n        username: profileObj.username,\n        premium: false,\n        paymentInfo: user.paymentInfo,\n        //set average haircut duration in seconds from barber profile\n        avgCutDuration: profileObj.avgDuration || 0\n\n    };\n    //creates a new barber profile object\n    return Object.assign(profile, canConfigureMembership(), User.canUpdate());\n\n  }\n\nexport default Barber;\n"]}