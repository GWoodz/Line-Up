{"version":3,"sources":["../../profiles/user.js"],"names":["User","parameters","Object","state","type","profileType","status","firstName","lastName","birthdate","email","phoneNumber","city","country","gender","paymentInfo","dateCreated","Date","assign"],"mappings":"AAAA;AACA;;;;;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,IAAT,CAAcC,UAAd,EAA0B;AACtB,QAAIC,SAASD,WAAWC,MAAxB;;AAEA;AACA,QAAIC,QAAQ;;AAERC,cAAM,uBAASC,WAAT,CAAqB,CAArB,CAFE;AAGRC,gBAAQ,uBAASA,MAAT,CAAgB,CAAhB,CAHA;AAIRC,mBAAWL,OAAOK,SAJV;AAKRC,kBAAUN,OAAOM,QALT;AAMRC,mBAAWP,OAAOO,SANV;AAORC,eAAOR,OAAOQ,KAPN;AAQRC,qBAAaT,OAAOS,WARZ;AASRC,cAAMV,OAAOU,IATL;AAURT,eAAOD,OAAOC,KAVN;AAWRU,iBAASX,OAAOW,OAXR;AAYRC,gBAAQZ,OAAOY,MAZP;AAaRC,qBAAa,IAbL;AAcRC,qBAAa,IAAIC,IAAJ;;AAdL,KAAZ;;AAkBA,WAAOf,OAAOgB,MAAP,CAAc,EAAd,EAAkBf,KAAlB,CAAP;AAEH,C,kBAEcH,I","file":"user.js","sourcesContent":["\"use strict\";\n//declaration entity file for user model\nimport profiles from \"./profileTypes\";\n\n// const canGenerateId = () => ({\n//\n//     generateId(x) {\n//\n//         let someId = x;\n//\n//         //checks to see if there is an existing id\n//         if (this.id) {\n//             console.log(\"There is already an existing id\");\n//             return\n//         }\n//         console.log(\"attempting to add id...\");\n//         //adds new id property to user object\n//         Object.defineProperty(this, \"id\", {\n//             value: someId\n//         });\n//     },\n// });\n\n//gives user ability to check if payment is setup\n// const checkPaymentInfo = (state) => ({\n//\n//     hasPaymentMethod: () => {\n//       //check if paymentInfo is empty\n//       if(state.paymentInfo != null){\n//         return true\n//       }\n//       else{\n//         return false\n//       }\n//     }\n// });\n\n//Public variables and objects\n\nfunction User(parameters) {\n    let Object = parameters.Object;\n\n    //creates a new user profile\n    let state = {\n\n        type: profiles.profileType[0],\n        status: profiles.status[0],\n        firstName: Object.firstName,\n        lastName: Object.lastName,\n        birthdate: Object.birthdate,\n        email: Object.email,\n        phoneNumber: Object.phoneNumber,\n        city: Object.city,\n        state: Object.state,\n        country: Object.country,\n        gender: Object.gender,\n        paymentInfo: null,\n        dateCreated: new Date()\n\n    };\n\n    return Object.assign({}, state);\n\n}\n\nexport default User;\n"]}