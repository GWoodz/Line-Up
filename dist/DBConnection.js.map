{"version":3,"sources":["../DBConnection.js"],"names":["fs","require","path","Sequelize","env","process","NODE_ENV","config","db","database","db_name","username","password","host","dialect","port","operatorsAliases","module","exports","models","Object","assign","readdirSync","filter","file","indexOf","map","model","join","__dirname","name","init","keys","associate"],"mappings":";;;;;;AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX,C,CAA0B;AAC1B,IAAMC,OAAOD,QAAQ,MAAR,CAAb,C,CAA8B;AAC9B,IAAME,YAAYF,QAAQ,WAAR,CAAlB;AACA,IAAMG,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,SAASN,QAAQ,UAAR,EAAoBG,GAApB,CAAf;;AAEA,IAAMI,KAAK,IAAIL,SAAJ,CAAcI,OAAOE,QAAP,CAAgBC,OAA9B,EAAuCH,OAAOE,QAAP,CAAgBE,QAAvD,EAAiEJ,OAAOE,QAAP,CAAgBG,QAAjF,EAA2F;AAClGC,UAAMN,OAAOE,QAAP,CAAgBI,IAD4E;AAElGC,aAASP,OAAOE,QAAP,CAAgBK,OAFyE;AAGlGC,UAAMR,OAAOE,QAAP,CAAgBM,IAH4E;AAIlG;AACAC,sBAAkB;AALgF,CAA3F,CAAX;AAOAC,OAAOC,OAAP,GAAiBV,EAAjB;;AAEA;AACA,IAAMW,SAASC,OAAOC,MAAP,gBAAc,EAAd,4BAAqBrB,GAAGsB,WAAH,CAAe,qBAAf,EAC/BC,MAD+B,CACxB,UAACC,IAAD;AAAA,WACHA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CADnB;AAAA,CADwB,EAI/BC,GAJ+B,CAI3B,UAAUF,IAAV,EAAgB;AACjB,QAAMG,QAAQ1B,QAAQC,KAAK0B,IAAL,CAAUC,SAAV,EAAqBL,IAArB,CAAR,CAAd;AACA;AACA,+BACKG,MAAMG,IADX,EACkBH,MAAMI,IAAN,CAAWvB,EAAX,CADlB;AAGH,CAV+B,CAArB,GAAf;;AAaA;;;;;;AACA,yBAAoBY,OAAOY,IAAP,CAAYb,MAAZ,CAApB,8HAAyC;AAAA,YAA9BQ,KAA8B;;AACrC,eAAOR,OAAOQ,KAAP,EAAcM,SAArB,KAAmC,UAAnC,IAAiDd,OAAOQ,KAAP,EAAcM,SAAd,CAAwBd,MAAxB,CAAjD;AACH;;;;;;;;;;;;;;;;AAEDF,OAAOC,OAAP,GAAiBC,MAAjB","file":"DBConnection.js","sourcesContent":["const fs = require(\"fs\"); // file system for grabbing files\nconst path = require(\"path\"); // better than '\\/..\\/' for portability\nconst Sequelize = require('sequelize');\nconst env = process.env.NODE_ENV || 'development';\nconst config = require('./config')[env];\n\nconst db = new Sequelize(config.database.db_name, config.database.username, config.database.password, {\n    host: config.database.host,\n    dialect: config.database.dialect,\n    port: config.database.port,\n    //limits Operator Alias use for security reasons\n    operatorsAliases: false\n});\nmodule.exports = db;\n\n// Load each model file\nconst models = Object.assign({}, ...fs.readdirSync('./profiles/DBModels')\n    .filter((file) =>\n        (file.indexOf(\".\") !== 0)\n    )\n    .map(function (file) {\n        const model = require(path.join(__dirname, file));\n        // console.log(model.init(sequelize).tableName)\n        return {\n            [model.name]: model.init(db),\n        };\n    })\n);\n\n// Load model associations\nfor (const model of Object.keys(models)) {\n    typeof models[model].associate === 'function' && models[model].associate(models);\n}\n\nmodule.exports = models;\n\n"]}